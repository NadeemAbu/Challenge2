using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using ClassLibrary;

namespace WPF
{
    /// <summary>
    /// Interaction logic for Procedures.xaml
    /// </summary>
    public partial class Procedures : Page
    {
        APIClient client;
        List<ProcedureClass> proceduresClassssss;
        List<TreatmentClass> treatmentClassssss;


        public Procedures()
        {
            InitializeComponent();
            DataContext = this;
        }

        private async void Page_Loaded(object sender, RoutedEventArgs e)
        {
            client = new APIClient();
           proceduresClassssss = await client.GetProcedures();
          treatmentClassssss = await client.GetTreatments();

            procedureDG.ItemsSource = proceduresClassssss;
            //treatmentsDG.ItemsSource = allTreatments;


        }

        private async void procedureDG_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {

            client = new APIClient();

            proceduresClassssss = await client.GetProcedures();
            var proceduresView = from p in proceduresClassssss
                                 join t in treatmentClassssss 
                             select new
                            {
                                 ProcedureID = p.ProcedureID,
                                 Description = p.Description,
                                 Price = p.Price
                            };

           procedureDG.ItemsSource = proceduresView;


        }

        private void procedureDG_AutoGeneratedColumns(object sender, EventArgs e)
        {

        }

        private async void treatmentsDG_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            client = new APIClient();

            List<TreatmentClass> alltreatments = await client.GetTreatments();
            var treatmentView = from t in alltreatments
                                select new
                                {
                                    PetName = t.PetName,
                                    OwnerID = t.OwnerID,
                                    ProcedureID = t.ProcedureID,
                                    Date = t.Date,
                                    Notes = t.Notes,
                                    Price = t.Price
                                };
            treatmentsDG.ItemsSource = treatmentView;
        }
    }
}
